#summary Development Machine for Chumby One Development with Qt.

= Introduction =
* WORK IN PROGRESS *

Add your content here.
= Installing VirtualBox on amd64 =
{{{
nano /etc/apt/sources.list.d/virtualbox.list
deb http://download.virtualbox.org/virtualbox/debian squeeze contrib non-free
}}}
{{{
wget -q http://download.virtualbox.org/virtualbox/debian/oracle_vbox.asc -O- | sudo apt-key add -
sudo apt-get update
sudo apt-get install virtualbox-4.0
}}}

= Install Debian 6 - 32-bit to virtualbox =
download netinst iso (45.5MB) and install it. Clean install without scratchbox will take about 2G. Give 1024MB of ram and 100G of disk for the image. Disk is dynamic allocated.
{{{
wget http://cdimage.debian.org/debian-cd/6.0.1a/i386/iso-cd/debian-6.0.1a-i386-businesscard.iso
}}}
select correct keyboard option for your keyboard and use english as language. select default options except:
{{{
on tasksel:
[ ] Graphical desktop environment
[ ] Web server
[ ] Print server
[ ] DNS server
[ ] File server
[ ] Mail server
[ ] SQL database
[*] SSH server
[ ] Laptop
[*] Standard system utilities
}}}
TODO: add screenshots

make port forward from virtual machine to localhost port 2222

= Installing ScratchBox on virtual Debian 6 32-bit =


{{{
su
}}}

{{{
nano /etc/apt/sources.list.d/scratchbox.list
deb http://scratchbox.org/debian apophis main
}}}

{{{
apt-get update
apt-get install scratchbox-core scratchbox-libs
apt-get install scratchbox-toolchain-host-gcc scratchbox-devkit-doctools scratchbox-devkit-perl scratchbox-devkit-debian-squeeze scratchbox-devkit-cputransp
}}}
note that cputransp is not available for amd64.

{{{
chgrp -R sbox /scratchbox/compilers
chmod -R g+w /scratchbox/compilers
mkdir /scratchbox/device_tools
chgrp -R sbox /scratchbox/device_tools
chmod -R g+w /scratchbox/device_tools
}}}

{{{
echo 4096 > /proc/sys/vm/mmap_min_addr
}}}
nano /etc/sysctl.conf
{{{
vm.mmap_min_addr = 4096
}}}

{{{
/scratchbox/sbin/sbox_adduser user
}}}

{{{
exit
}}}

{{{
/scratchbox/login
[sbox-NO-TARGET: ~] > sb-menu
}}}

{{{
Setup a new target and call it HOST
Select the host-gcc compiler
Select the debian-etch, perl, and doctools devkits.
Select no cpu transparency method.
Select "Yes" to installing files, and check /etc and Devkits.
Select the target by choosing Yes
}}}
create host target.. add screenshots here.

{{{
Shell restarting...
[sbox-HOST: ~] > 
}}}

{{{
cd /scratchbox/compilers
wget http://files.chumby.com/toolchain/arm-2008q3-72-arm-none-linux-gnueabi-i686-pc-linux-gnu.tar.bz2
tar -xvjpf arm-2008q3-72-arm-none-linux-gnueabi-i686-pc-linux-gnu.tar.bz
cd arm-2008q3
ln -s arm-none-linux-gnueabi/libc/usr/include .
ln -s /scratchbox/compilers/arm-2008q3/arm-none-linux-gnueabi/include/c++ include/c++
}}}

{{{
pushd ~
rm -rf sb-toolchain-extras
darcs get --set-scripts-executable http://scratchbox.org/repos/1.0/sb-toolchain-extras
popd
~/sb-toolchain-extras/confhelper/create_toolchain_conf.py > ~/sb-toolchain-extras/meta/alien-tc/arm-2008q3.conf
}}}

{{{
cd ~/sb-toolchain-extras
nano meta/alien-tc/arm-2008q3.conf
COMPILER_PACKAGE = chumby
}}}

{{{
make CONFIG=meta/alien-tc/arm-2008q3.conf -C meta/alien-tc all-sums
make CONFIG=meta/alien-tc/arm-2008q3.conf -C meta/alien-tc
cd
}}}

{{{
nano /scratchbox/compilers/arm-2008q3/target_setup.sh
os.system('echo export SBOX_EXTRA_COMPILER_ARGS=-Wno-poison-system-directories >> ' + target + '.environment')
}}}
= Installing tslib =
{{{
wget https://github.com/kergoth/tslib/tarball/master
tar -xvjpf master
cd kergoth-tslib
./configure --prefix=/psp --host=arm-linux
make && make install
cd
}}}
{{{
nano /psp/chumby.env
export TSLIB_TSDEVICE=/dev/input/event1
export TSLIB_FBDEVICE=/dev/fb0
export TSLIB_PLUGINDIR=/psp/lib/ts
export TSLIB_CONSOLEDEVICE=none
export TSLIB_CONFFILE=/psp/etc/ts.conf
export TSLIB_CALIBFILE=/psp/etc/pointercal
export LD_LIBRARY_PATH=/lib:/psp/lib
export POINTERCAL_FILE=/psp/etc/pointercal
export QWS_MOUSE_PROTO=Tslib:/dev/input/event1
#export QWS_KEYBOARD=none
export QWS_KEYBOARD=USB:/dev/input/event1
export PATH=/psp/bin:/psp/usr/bin:/psp/usr/sbin:/psp/usr/local/bin:$PATH
}}}
{{{
nano /psp/etc/ts.conf
module_raw input
}}}
= Installing Qt 4.7.2 for Embedded Linux =
{{{
wget http://get.qt.nokia.com/qt/source/qt-everywhere-opensource-src-4.7.2.tar.gz
tar -xvzpf qt-everywhere-opensource-src-4.7.2.tar.gz
cd qt-everywhere-opensource-src-4.7.2
}}}

nano configure-qt.sh
{{{
#!/bin/bash
DISABLED_MODULES="-no-qt3support -no-accessibility -no-svg"
ENABLED_MODULES="-qt-libjpeg -qt-libmng -qt-gif -qt-webkit -qt-libpng -qt-libtiff -qt-zlib -qt-freetype"
MISC_FLAGS="-opensource -embedded arm -xplatform qws/linux-arm-g++ -force-pkg-config"
DEVICES="-qt-gfx-linuxfb -qt-kbd-tty -qt-mouse-tslib"
DISABLED_PACKAGES="-nomake tests -nomake examples -nomake demos -nomake docs -nomake translations"
DIRECTORIES="-L/psp/lib/ -I/psp/include/ -prefix /psp/"
./configure -release $DIRECTORIES $DISABLED_MODULES $ENABLED_MODULES $MISC_FLAGS $DEVICES $DISABLED_PACKAGES
}}}

{{{
./configure-qt.sh
make
make install
}}}


= Compiling a Qt application =
Add following lines to .pro
{{{
LIBS += /psp/lib/libts.so
INCLUDEPATH += /psp/include
}}}
Inside scratchbox trigger the qmake
{{{
/psp/bin/qmake
}}}

= First run on Chumby =
{{{
cd /psp
source chumby.env
ts_calibrate
}}}
then copy the calibration data from /psp/etc/pointercal for later usage, if you want to avoid calibration in future hacks.

= Hardware =
== JTAG ==
{{{
The pinout of P100 is as follows:
1 - 3.3V
2 - TCK
3 - TDI
4 - GND
5 - TMS
6 - TDO
7 - TRST
8 - CHUMBY_RESET
}}}
= Links & Material =
  * http://wiki.chumby.com/index.php/Scratchbox
  * https://github.com/kergoth/tslib
  * http://forum.chumby.com/viewtopic.php?id=5974
  * http://www.jespersaur.com/drupal/node/30
  * http://www.armadeus.com/wiki/index.php?title=Qt/Embedded
  * http://thelins.se/learnqt/2009/06/an-embedded-linux-development-setup/
  * http://files.chumby.com/source/
  * http://wiki.chumby.com/index.php/Chumby_Software_Applications,_Scripts_and_Tools
  * http://forum.chumby.com/viewtopic.php?id=1145
  * http://forum.chumby.com/viewtopic.php?id=1469
  * http://forum.chumby.com/viewtopic.php?id=1493
  * http://wiki.chumby.com/index.php/Hacking_Linux_for_chumby
  * http://forum.chumby.com/viewtopic.php?id=3454
  * http://sourceforge.net/apps/mediawiki/chumby-kernel/index.php?title=Kexec_boot